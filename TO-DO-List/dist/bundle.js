new class{constructor(){this.todos=[],this.filter="all",this.render()}addTodo(e){const t={text:e,completed:!1};this.todos.push(t),this.render()}completeTodo(e){this.todos[e].completed=!0,this.render()}deleteTodo(e){this.todos.splice(e,1),this.render()}editTodoText(e,t){this.todos[e].text=t,this.render()}filterTodos(){let e=[];"completed"===this.filter?(e=this.todos.filter((e=>e.completed)),console.log("completed",e)):"incomplete"===this.filter?(e=this.todos.filter((e=>!e.completed)),console.log("no completed",e)):e=this.todos,this.render(e)}setFilter(e){this.filter=e,this.filterTodos()}reorderTodos(e){e.preventDefault();const t=Number(e.dataTransfer.getData("text/plain")),d=Number(e.target.getAttribute("data-index")),n=this.todos[t];this.todos.splice(t,1),this.todos.splice(d,0,n),this.render()}render(e){const t=document.getElementById("todo-list");t&&(t.innerHTML="",this.renderTodoList(t,e),this.renderAddTodoForm(t),this.renderFilterButtons(t))}renderTodoList(e,t){(t||this.todos).forEach(((t,d)=>{const n=document.createElement("div");n.classList.add("todo-item-container");const o=document.createElement("li");o.innerText=t.text,o.setAttribute("draggable","true"),o.setAttribute("data-index",d.toString()),o.addEventListener("dragstart",(e=>{e.dataTransfer.setData("text/plain",d.toString())})),o.addEventListener("dragover",(e=>{e.preventDefault()})),o.addEventListener("drop",this.reorderTodos.bind(this)),t.completed?o.classList.add("completed"):o.classList.add("incomplete");const i=document.createElement("button");i.innerText="Complete",t.completed?i.style.display="none":i.addEventListener("click",(()=>{this.completeTodo(d),i.style.display="none"})),o.appendChild(i);const r=document.createElement("button");r.innerText="Edit",r.addEventListener("click",(()=>{this.renderEditTodoForm(o,t,d)})),o.appendChild(r);const s=document.createElement("button");s.innerText="Delete",s.addEventListener("click",(()=>{this.deleteTodo(d)})),o.appendChild(s),n.appendChild(o),e.appendChild(n)}))}renderEditTodoForm(e,t,d){const n=document.createElement("input");n.type="text",n.value=t.text,n.addEventListener("keydown",(e=>{if("Enter"===e.key){const e=n.value.trim();e&&this.editTodoText(d,e)}})),e.replaceChild(n,e.firstChild),n.select()}renderAddTodoForm(e){const t=document.createElement("form"),d=document.createElement("input"),n=document.createElement("button");d.placeholder="Add a new to-do item",n.innerText="Add",n.addEventListener("click",(e=>{e.preventDefault();const t=d.value.trim();t&&(this.addTodo(t),d.value="")})),t.appendChild(d),t.appendChild(n),e.appendChild(t)}renderFilterButtons(e){const t=document.createElement("div"),d=document.createElement("button");d.innerText="All",d.addEventListener("click",(()=>{this.setFilter("all")})),t.appendChild(d);const n=document.createElement("button");n.innerText="Completed",n.addEventListener("click",(()=>{this.setFilter("completed")})),t.appendChild(n);const o=document.createElement("button");o.innerText="Incomplete",o.addEventListener("click",(()=>{this.setFilter("incomplete")})),t.appendChild(o),e.appendChild(t)}};
//# sourceMappingURL=bundle.js.map